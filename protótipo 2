<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Monitoramento Climático</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #2c5282;
            --secondary-color: #4299e1;
            --accent-color: #e53e3e;
            --text-color: #2d3748;
            --light-bg: #f0f8ff;
            --card-bg: #ffffff;
            --success-color: #38a169;
            --warning-color: #dd6b20;
            --danger-color: #e53e3e;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--light-bg);
            color: var(--text-color);
            line-height: 1.6;
            padding: 1rem;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #f0f8ff 0%, #e6fffa 100%);
        }
        
        .container {
            max-width: 800px;
            width: 100%;
            background: var(--card-bg);
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        header {
            background: var(--primary-color);
            color: white;
            padding: 1.5rem;
            text-align: center;
        }
        
        h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        
        .subtitle {
            font-size: 1rem;
            opacity: 0.9;
        }
        
        .search-box {
            padding: 1.5rem;
            background: var(--secondary-color);
            display: flex;
            justify-content: center;
        }
        
        .search-input {
            padding: 0.8rem 1.2rem;
            border: none;
            border-radius: 50px 0 0 50px;
            width: 70%;
            font-size: 1rem;
            outline: none;
        }
        
        .search-btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 0 50px 50px 0;
            background: var(--primary-color);
            color: white;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .search-btn:hover {
            background: #2a4365;
        }
        
        .main-content {
            padding: 2rem;
        }
        
        .loading {
            text-align: center;
            padding: 2rem;
            display: none;
        }
        
        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left: 4px solid var(--primary-color);
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 1rem;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        .current-weather {
            text-align: center;
            margin-bottom: 2rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .temp {
            font-size: 4rem;
            font-weight: bold;
            color: var(--accent-color);
            margin: 1rem 0;
        }
        
        .weather-desc {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        .weather-icon {
            font-size: 2rem;
        }
        
        .details-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
            margin-top: 1.5rem;
        }
        
        .detail-card {
            background: #f7fafc;
            padding: 1rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .detail-value {
            font-size: 1.5rem;
            font-weight: bold;
            margin: 0.5rem 0;
            color: var(--primary-color);
        }
        
        .detail-label {
            font-size: 0.9rem;
            color: #718096;
        }
        
        .location {
            text-align: center;
            margin-top: 1rem;
            font-size: 1.1rem;
            color: #4a5568;
        }
        
        .forecast {
            margin-top: 2rem;
        }
        
        .forecast-title {
            text-align: center;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }
        
        .forecast-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 1rem;
        }
        
        .forecast-card {
            background: #f7fafc;
            padding: 1rem;
            border-radius: 10px;
            text-align: center;
        }
        
        .forecast-day {
            font-weight: bold;
            margin-bottom: 0.5rem;
        }
        
        .forecast-temp {
            font-size: 1.2rem;
            color: var(--accent-color);
            margin: 0.5rem 0;
        }
        
        .error-message {
            text-align: center;
            padding: 2rem;
            color: var(--danger-color);
            display: none;
        }
        
        footer {
            text-align: center;
            padding: 1.5rem;
            background: #edf2f7;
            color: #718096;
            font-size: 0.9rem;
        }
        
        @media (max-width: 600px) {
            .temp {
                font-size: 3rem;
            }
            
            .search-input {
                width: 60%;
            }
            
            .details-grid {
                grid-template-columns: 1fr 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1><i class="fas fa-cloud-sun"></i> Clima Agora</h1>
            <p class="subtitle">Sistema de Monitoramento para Produtores Rurais</p>
        </header>
        
        <div class="search-box">
            <input type="text" class="search-input" placeholder="Digite uma cidade..." value="São Paulo">
            <button class="search-btn">Buscar</button>
        </div>
        
        <div class="loading">
            <div class="spinner"></div>
            <p>Carregando dados climáticos...</p>
        </div>
        
        <div class="error-message">
            <i class="fas fa-exclamation-circle"></i>
            <p>Não foi possível carregar os dados. Verifique o nome da cidade e tente novamente.</p>
        </div>
        
        <div class="main-content">
            <div class="current-weather">
                <div class="weather-desc">
                    <i class="fas fa-cloud-sun weather-icon"></i>
                    <span class="weather-text">Parcialmente Nublado</span>
                </div>
                <div class="temp">25°C</div>
                
                <div class="details-grid">
                    <div class="detail-card">
                        <i class="fas fa-tint"></i>
                        <div class="detail-value">60%</div>
                        <div class="detail-label">Umidade</div>
                    </div>
                    <div class="detail-card">
                        <i class="fas fa-wind"></i>
                        <div class="detail-value">10 km/h</div>
                        <div class="detail-label">Vel. Vento</div>
                    </div>
                    <div class="detail-card">
                        <i class="fas fa-compress-alt"></i>
                        <div class="detail-value">1015 hPa</div>
                        <div class="detail-label">Pressão</div>
                    </div>
                    <div class="detail-card">
                        <i class="fas fa-eye"></i>
                        <div class="detail-value">10 km</div>
                        <div class="detail-label">Visibilidade</div>
                    </div>
                </div>
                
                <div class="location">
                    <i class="fas fa-map-marker-alt"></i> São Paulo, SP, Brasil
                </div>
            </div>
            
            <div class="forecast">
                <h2 class="forecast-title">Previsão para os próximos dias</h2>
                <div class="forecast-cards">
                    <div class="forecast-card">
                        <div class="forecast-day">Amanhã</div>
                        <i class="fas fa-sun"></i>
                        <div class="forecast-temp">27°C</div>
                    </div>
                    <div class="forecast-card">
                        <div class="forecast-day">Qua</div>
                        <i class="fas fa-cloud-rain"></i>
                        <div class="forecast-temp">23°C</div>
                    </div>
                    <div class="forecast-card">
                        <div class="forecast-day">Qui</div>
                        <i class="fas fa-cloud"></i>
                        <div class="forecast-temp">24°C</div>
                    </div>
                    <div class="forecast-card">
                        <div class="forecast-day">Sex</div>
                        <i class="fas fa-sun"></i>
                        <div class="forecast-temp">26°C</div>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>Dados fornecidos por OpenWeatherMap • Atualizado em: <span class="update-time">--:--</span></p>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchBtn = document.querySelector('.search-btn');
            const searchInput = document.querySelector('.search-input');
            const loadingEl = document.querySelector('.loading');
            const errorEl = document.querySelector('.error-message');
            const mainContent = document.querySelector('.main-content');
            const updateTimeEl = document.querySelector('.update-time');
            
            // Mapeamento de condições climáticas para ícones
            const weatherIcons = {
                'Clear': 'fa-sun',
                'Clouds': 'fa-cloud',
                'Rain': 'fa-cloud-rain',
                'Drizzle': 'fa-cloud-sun-rain',
                'Thunderstorm': 'fa-bolt',
                'Snow': 'fa-snowflake',
                'Mist': 'fa-smog',
                'Smoke': 'fa-smog',
                'Haze': 'fa-smog',
                'Dust': 'fa-smog',
                'Fog': 'fa-smog',
                'Sand': 'fa-smog',
                'Ash': 'fa-smog',
                'Squall': 'fa-wind',
                'Tornado': 'fa-tornado'
            };
            
            // Função para atualizar a interface com os dados climáticos
            function updateWeatherUI(data) {
                // Atualizar dados atuais
                document.querySelector('.temp').textContent = `${Math.round(data.main.temp)}°C`;
                document.querySelector('.weather-text').textContent = data.weather[0].description;
                
                // Atualizar ícone do clima
                const weatherIcon = document.querySelector('.weather-icon');
                const iconClass = weatherIcons[data.weather[0].main] || 'fa-cloud';
                weatherIcon.className = `fas ${iconClass} weather-icon`;
                
                // Atualizar detalhes
                document.querySelector('.detail-value:nth-child(2)').textContent = `${data.main.humidity}%`;
                document.querySelector('.detail-value:nth-child(4)').textContent = `${data.wind.speed} km/h`;
                document.querySelector('.detail-value:nth-child(6)').textContent = `${data.main.pressure} hPa`;
                document.querySelector('.detail-value:nth-child(8)').textContent = `${(data.visibility / 1000).toFixed(1)} km`;
                
                // Atualizar localização
                document.querySelector('.location').innerHTML = 
                    `<i class="fas fa-map-marker-alt"></i> ${data.name}, ${data.sys.country}`;
                
                // Atualizar hora da última atualização
                const now = new Date();
                updateTimeEl.textContent = now.toLocaleTimeString('pt-BR');
                
                // Mostrar conteúdo principal e esconder loading/erro
                mainContent.style.display = 'block';
                loadingEl.style.display = 'none';
                errorEl.style.display = 'none';
            }
            
            // Função para buscar dados climáticos
            function fetchWeatherData(city) {
                // Mostrar loading e esconder conteúdo principal e erro
                loadingEl.style.display = 'block';
                mainContent.style.display = 'none';
                errorEl.style.display = 'none';
                
                // API Key para OpenWeatherMap (em produção, isso deve ser protegido)
                const apiKey = 'SUA_CHAVE_API_AQUI';
                const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}&lang=pt_br`;
                
                fetch(url)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Cidade não encontrada');
                        }
                        return response.json();
                    })
                    .then(data => {
                        updateWeatherUI(data);
                    })
                    .catch(error => {
                        console.error('Erro ao buscar dados:', error);
                        loadingEl.style.display = 'none';
                        errorEl.style.display = 'block';
                    });
            }
            
            // Event listener para o botão de busca
            searchBtn.addEventListener('click', function() {
                const city = searchInput.value.trim();
                if (city) {
                    fetchWeatherData(city);
                }
            });
            
            // Event listener para pressionar Enter no campo de busca
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    const city = searchInput.value.trim();
                    if (city) {
                        fetchWeatherData(city);
                    }
                }
            });
            
            // Carregar dados iniciais
            fetchWeatherData('São Paulo');
        });
    </script>
</body>
</html>
